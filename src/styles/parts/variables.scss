@use "sass:math";
@use "sass:color";

// FONTS
$page-header-font: rama-gothic-c, "Rama Gothic C", Impact, sans-serif;
%page-header {
  font-family: $page-header-font;
  font-weight: 900;
}

$page-subheader-font: minion-3-subhead, "Minion 3 Subhead", "Times New Roman",
  Times, serif;
%page-subheader {
  font-family: $page-subheader-font;
  font-weight: 400;
}

$body-header-font: rama-gothic-m, "Rama Gothic M", Impact, sans-serif;
%body-header {
  font-family: $body-header-font;
  font-weight: 700;
}

$body-text-font: minion-3, "Minion 3", "Times New Roman", Times, serif;
%body-text {
  font-family: $body-text-font;
  font-weight: 400;
}

$light-condensed-font: rama-gothic-e, "Rama Gothic E", Arial, sans-serif;
%light-condensed {
  font-family: $light-condensed-font;
  font-weight: 300;
}

// COLORS
$base-dark: #392e25;
$base-accent: #df4d25;
$background-grey: #f6f5f5;
$positive-green: #417505;
$base-white: #fff;

$base-light: color.adjust($base-dark, $lightness: 15%, $space: oklch);
$base-lighter: color.adjust($base-dark, $lightness: 50%, $space: oklch);

$margin-bottom-std: 1rem;

$shadows-std: -1px 4px 6px 0px rgba(0, 0, 0, 0.3);
$shadows-sm: -1px 2px 4px 0px rgba(0, 0, 0, 0.15);

// Media-Query Breaks

$md-width: 740px;
$lg-width: 998px;
$xl-width: 1400px;

.xl-show {
  display: none;
  @media (min-width: $xl-width) {
    display: block;
  }
}

.lg-show {
  display: none;
  @media (min-width: $lg-width) {
    display: block;
  }
}

.md-show {
  display: none;
  @media (min-width: $md-width) {
    display: block;
  }
}

.md-hide {
  display: block;
  @media (min-width: $md-width) {
    display: none;
  }
}

.lg-hide {
  display: block;
  @media (min-width: $lg-width) {
    display: none;
  }
}

@mixin max-auto($prop) {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  max-width: $prop;
}

@mixin makeColumnsByMargin($marginWidth, $columnsQty, $columnFr, $gutterFr) {
  $cols: [col];
  $gutters: [gutter];
  $grid-template-cols: "";
  @for $i from 1 through $columnsQty - 1 {
    $grid-template-cols: $grid-template-cols +
      $cols +
      " " +
      $columnFr +
      "fr " +
      $gutters +
      " " +
      $gutterFr +
      "fr ";
  }
  grid-template-columns: [lMrg] $marginWidth #{$grid-template-cols} $cols #{$columnFr}fr [rMrg] $marginWidth [last];
}

@mixin makeColumnsByWidth($totalWidth, $columnsQty, $gutterWidth, $units) {
  $cols: [col];
  $gutters: [gutter];
  // $content: "";
  $remainingWidth: ($totalWidth - ($columnsQty - 1) * $gutterWidth);
  $grid-template-cols: "";
  @if $remainingWidth < $columnsQty {
    @error "Gutter width is too large for total width!";
  }
  $columnWidth: math.div($remainingWidth, $columnsQty);
  @for $i from 1 through $columnsQty - 1 {
    $grid-template-cols: $grid-template-cols +
      $cols +
      " " +
      $columnWidth +
      $units +
      " " +
      $gutters +
      " " +
      $gutterWidth +
      $units +
      " ";
  }
  grid-template-columns: [lMrg] 1fr #{$grid-template-cols} $cols #{$columnWidth}#{$units} [rMrg] 1fr;
}

@media (min-width: $md-width) {
  %page-grid-header-md {
    display: grid;
    grid-template-columns: [lMrg] 0.5fr [lCol] 5fr [gutter] 1fr [rCol1] 2fr [rCol2] 2fr [rCol3] 2fr [rMrg] 0.5fr [last];
    grid-template-rows: auto auto auto;
  }
  %page-grid-md {
    display: grid;
    @include makeColumnsByMargin(0.5fr, 12, 1, 0.25);
    grid-template-rows: 1fr minmax(0px, 4rem) auto minmax(0px, 4rem) 1fr;
  }
}

@media (min-width: $lg-width) {
  %page-grid-header-lg {
    display: grid;
    grid-template-columns: [lMrg] 0.5fr [lCol] 38.5em [gutter] 9.5em [rCol1] 16em [rCol2] 16em [rCol3] 14.5em [rMrg] 0.5fr [last];
    grid-template-rows: auto auto auto;
  }

  %page-grid-lg {
    display: grid;
    @include makeColumnsByWidth(94.5, 12, 1.5, "em");
    grid-template-rows: 1fr minmax(0px, 4rem) auto minmax(0px, 4rem) 1fr;
  }
}

$grid-text-left: col 1 / gutter 4;

$grid-images-right-edge: col 6 / last;

$grid-images-right: col 6 / rMrg;

$grid-text-right: col 9 / rMrg;

$grid-images-left-edge: lMrg / gutter 7;

$grid-images-left: col 1 / gutter 7;

%extra-bg-white-grid {
  content: "";
  display: block;
  background-color: $base-white;
  z-index: -100;
  grid-column: lMrg / last;
  grid-row: 2 / span 3;
}

%img-ctr-responsive {
  margin: 0;
  // height: auto;
  // min-height: 100%;
  // width: auto;
  // min-width: 100%;
  // max-width: 110%;
  width: 100%;
  height: 100%;
  position: absolute;
  object-fit: cover;
  object-position: center;
  top: 0;
  left: 0;
  // top: 50%;
  // left: 50%;
  // transform: translate(-50%, -50%);
}

.clearfix::after {
    content: "";
    clear: both;
    display: table;
  }
